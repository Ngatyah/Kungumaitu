{"ast":null,"code":"var _jsxFileName = \"/home/ngatyah/JAVASCRIPT/kungumaitu/src/Store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIdex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIdex];\n    console.log(existingCartItem);\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIdex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, cartDispatchFn] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    cartDispatchFn({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    cartDispatchFn({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"dusqPBGVQSrb7xhYtTnR6X0BP2s=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/ngatyah/JAVASCRIPT/kungumaitu/src/Store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIdex","findIndex","id","existingCartItem","console","log","updatedItems","updatedItem","concat","CartProvider","props","cartState","cartDispatchFn","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAGA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACvB,UAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA/E;AAEA,UAAMC,oBAAoB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CACzBJ,IAAI,IAAIA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EADP,CAA7B;AAGA,UAAMC,gBAAgB,GAAGV,KAAK,CAACH,KAAN,CAAYU,oBAAZ,CAAzB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,gBAAZ;AAEA,QAAIG,YAAJ;;AAEA,QAAIH,gBAAJ,EAAsB;AAClB,YAAMI,WAAW,GAAG,EAChB,GAAGJ,gBADa;AAEhBJ,QAAAA,MAAM,EAAEI,gBAAgB,CAACJ,MAAjB,GAA0BL,MAAM,CAACK;AAFzB,OAApB;AAKAO,MAAAA,YAAY,GAAG,CAAC,GAAGb,KAAK,CAACH,KAAV,CAAf;AACAgB,MAAAA,YAAY,CAACN,oBAAD,CAAZ,GAAqCO,WAArC;AAEH,KATD,MASO;AAEHD,MAAAA,YAAY,GAAGb,KAAK,CAACH,KAAN,CAAYkB,MAAZ,CAAmBd,MAAM,CAACG,IAA1B,CAAf;AAEH;;AACD,WAAO;AACHP,MAAAA,KAAK,EAAEgB,YADJ;AAEHf,MAAAA,WAAW,EAAEK;AAFV,KAAP;AAOH;;AAED,SAAOP,gBAAP;AAEH,CArCD;;AAuCA,MAAMoB,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAE1B,QAAM,CAACC,SAAD,EAAYC,cAAZ,IAA8BzB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAA9C;;AAEA,QAAMwB,oBAAoB,GAAGhB,IAAI,IAAI;AACjCe,IAAAA,cAAc,CAAC;AAAEjB,MAAAA,IAAI,EAAE,KAAR;AAAeE,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAd;AACH,GAFD;;AAGA,QAAMiB,yBAAyB,GAAGZ,EAAE,IAAI;AACpCU,IAAAA,cAAc,CAAC;AAAEjB,MAAAA,IAAI,EAAE,QAAR;AAAkBO,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAd;AACH,GAFD;;AAKA,QAAMa,WAAW,GAAG;AAChBzB,IAAAA,KAAK,EAAEqB,SAAS,CAACrB,KADD;AAEhBC,IAAAA,WAAW,EAAEoB,SAAS,CAACpB,WAFP;AAGhByB,IAAAA,OAAO,EAAEH,oBAHO;AAIhBI,IAAAA,UAAU,EAAEH;AAJI,GAApB;AAQA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACFL,KAAK,CAACQ;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAvBD;;GAAMT,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport CartContext from \"./cart-context\";\n\n\nconst defaultCartState = {\n    items: [],\n    totalAmount: 0\n}\nconst cartReducer = (state, action) => {\n    if (action.type === 'ADD') {\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n\n        const existingCartItemIdex = state.items.findIndex(\n            item => item.id === action.item.id);\n\n        const existingCartItem = state.items[existingCartItemIdex];\n        console.log(existingCartItem);\n\n        let updatedItems;\n\n        if (existingCartItem) {\n            const updatedItem = {\n                ...existingCartItem,\n                amount: existingCartItem.amount + action.amount\n            };\n\n            updatedItems = [...state.items];\n            updatedItems[existingCartItemIdex] = updatedItem;\n\n        } else {\n\n            updatedItems = state.items.concat(action.item);\n\n        }\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        };\n\n\n\n    }\n\n    return defaultCartState;\n\n};\n\nconst CartProvider = props => {\n\n    const [cartState, cartDispatchFn] = useReducer(cartReducer, defaultCartState);\n\n    const addItemToCartHandler = item => {\n        cartDispatchFn({ type: \"ADD\", item: item })\n    }\n    const removeItemFromCartHandler = id => {\n        cartDispatchFn({ type: \"REMOVE\", id: id })\n    }\n\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHandler\n    }\n\n\n    return <CartContext.Provider value={cartContext}>\n        {props.children}\n    </CartContext.Provider>\n}\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}